<?xml version="1.0"?>

<project
  default="jar:jar"
  xmlns:ant="jelly:ant"
  xmlns:j="jelly:core"
  xmlns:maven="jelly:maven">

  <!-- Compiles the aspects to a JAR file to be loaded by the test suite. -->
  <goal name="ajcl:jar" prereqs="test:compile, ajcl:deinstrument-aspectj">

    <ant:taskdef
      resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties"
      classpathRef="maven.dependency.classpath"/>

    <!-- Only compile the test aspects if one of them changed. -->
    <ant:uptodate
      property="compile-not-required"
      targetfile="${maven.build.dir}/${maven.final.name}-aspects.jar">
      <ant:srcfiles dir="${maven.src.dir}/aspects"/>
    </ant:uptodate>

    <j:if test="${context.getVariable('compile-not-required') == null}">

      <ant:iajc
        sourceRoots="src/aspects"
        classpath="target/test-classes"
        classpathRef="maven.dependency.classpath"
        outJar="target/${maven.final.name}-aspects.jar"
        verbose="true" />

    </j:if>
  </goal>

  <!-- Add the aspects to the test's classpath. -->
  <preGoal name="test:test">

    <attainGoal name="ajcl:jar" />

    <ant:path id="ajcl.classpath">
      <ant:pathelement path="target/${maven.final.name}-aspects.jar" />
    </ant:path>

    <maven:addPath id="maven.dependency.classpath" refid="ajcl.classpath" />

  </preGoal>

  <!--
    NOTE: The aspectjtools.jar that ships with AspectJ is an invalid zip file;
    it contains two files with the same name of
    "org/w3c/dom/html/HTMLDOMImplementationImpl.class". You need to remove one
    of these files from the JAR for AspectJ to be able to instrument it.
  -->

  <!-- Instruments a AspectJ runtime jar. -->
  <goal name="ajcl:instrument-aspectj" prereqs="ajcl:jar">

    <ant:taskdef
      resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties"
      classpathRef="maven.dependency.classpath"/>

    <!-- Rollback the original so we instrument against a new copy. -->
    <j:remove var="original.exists" />
    <ant:available
      property="original.exists"
      file="target/aspectjtools-original.jar" />

    <j:if test="${context.getVariable('original.exists') != null}">
      <ant:echo message="Rolling back to a pristine aspectjtools..." />
      <ant:copy
        file="target/aspectjtools-original.jar"
        tofile="${pom.getDependencyPath('aspectj:aspectjtools')}"
        overwrite="true" />
    </j:if>

    <!-- Instrument the pristine aspectjtools. -->
    <ant:iajc
      injars="${pom.getDependencyPath('aspectj:aspectjtools')}"
      classpathRef="maven.dependency.classpath"
      aspectPath="target/${maven.final.name}-aspects.jar"
      outJar="target/aspectjtools-instrumented.jar"
      copyInjars="true"
      verbose="true" />

    <!-- Save a copy of the pristine aspectj. -->
    <j:if test="${context.getVariable('original.exists') == null}">
      <ant:echo message="Saving a copy of the original aspectjtools..." />
      <ant:copy
        file="${pom.getDependencyPath('aspectj:aspectjtools')}"
        tofile="target/aspectjtools-original.jar" />
    </j:if>

    <!-- Move in our instrumented version. -->
    <ant:copy
      file="target/aspectjtools-instrumented.jar"
      tofile="${pom.getDependencyPath('aspectj:aspectjtools')}"
      overwrite="true" />

  </goal>

  <goal name="ajcl:decompile-instrumented-aspectj">
    <ant:delete dir="target/instrumented-classes" />
    <ant:delete dir="target/instrumented-src" />
    <ant:mkdir dir="target/instrumented-classes" />

    <ant:unjar dest="target/instrumented-classes" src="${maven.build.dir}/aspectjtools-instrumented.jar" />

    <ant:exec executable="jad">
      <ant:arg value="-r" />
      <ant:arg value="-dtarget\instrumented-src" />
      <ant:arg value="-s java" />
      <ant:arg value="target\instrumented-classes\**/*.class" />
    </ant:exec>

  </goal>

  <goal name="ajcl:deinstrument-aspectj">

    <j:remove var="original.exists" />
    <ant:available
      property="original.exists"
      file="target/aspectjtools-original.jar" />

    <j:if test="${context.getVariable('original.exists') != null}">
      <ant:copy
        file="target/aspectjtools-original.jar"
        tofile="${pom.getDependencyPath('aspectj:aspectjtools')}"
        overwrite="yes" />
    </j:if>

  </goal>

</project>
