<plexus>

  <component-repository implementation="org.codehaus.plexus.personality.avalon.AvalonComponentRepository">
    <composition-resolver implementation="org.codehaus.plexus.component.composition.DefaultCompositionResolver"/>
  </component-repository>

  <!--
   |
   | Lifecycle handler Manager.
   |
   -->
  <lifecycle-handler-manager implementation='org.codehaus.plexus.lifecycle.DefaultLifecycleHandlerManager'>
    <default-lifecycle-handler-id>avalon</default-lifecycle-handler-id>
    <lifecycle-handlers>
      <lifecycle-handler implementation='org.codehaus.plexus.personality.avalon.AvalonLifecycleHandler'>
        <id>avalon</id>
        <name>Avalon Lifecycle Handler</name>
        <begin-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.LogEnablePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ContextualizePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ServicePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ComposePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ConfigurePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.InitializePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.StartPhase'/>
        </begin-segment>
        <suspend-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.SuspendPhase'/>
        </suspend-segment>
        <resume-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ResumePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.RecontextualizePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ReconfigurePhase'/>
        </resume-segment>
        <end-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.StopPhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.DisposePhase'/>
        </end-segment>
      </lifecycle-handler>
    </lifecycle-handlers>
  </lifecycle-handler-manager>

  <components>    
	<component>
	  <role>org.codehaus.jasf.SecurityService</role>
	  <implementation>org.codehaus.jasf.JASFSecurityService</implementation>
	  <configuration>
		<entities>
			<entity type="org.codehaus.jasf.entities.web.User"/>
		</entities>
		<resources>
	      <resource type="org.codehaus.jasf.resources.PageResource"/>
		  <resource type="org.codehaus.jasf.resources.ProjectPageResource"/>
	      <resource type="org.codehaus.jasf.resources.ClassMethodResource"/>
		</resources>
      </configuration>
    </component>

    <component>
      <role-hint>org.codehaus.jasf.entities.web.User</role-hint>
      <role>org.codehaus.jasf.Authenticator</role>
      <implementation>org.codehaus.jasf.impl.basic.UserAuthenticationController</implementation>
      <configuration>
		<users>${basedir}/src/test-conf/users.xml</users>
		<roles>${basedir}/src/test-conf/roles.xml</roles>
	  </configuration>
    </component>

    <component>
      <role-hint>org.codehaus.jasf.resources.ClassMethodResource</role-hint>
      <role>org.codehaus.jasf.ResourceController</role>
      <implementation>org.codehaus.jasf.impl.basic.ClassAccessController</implementation>
      <configuration>
        <defaultAuthorization>false</defaultAuthorization>
	  </configuration>
    </component>

    <component>
      <role-hint>org.codehaus.jasf.resources.ProjectPageResource</role-hint>
      <role>org.codehaus.jasf.ResourceController</role>
      <implementation>org.codehaus.jasf.impl.global.NoAccessResourceController</implementation>
      <configuration>
	  </configuration>
    </component>

    <component>
      <role-hint>org.codehaus.jasf.resources.PageResource</role-hint>
      <role>org.codehaus.jasf.ResourceController</role>
      <implementation>org.codehaus.jasf.impl.basic.PageAccessController</implementation>
      <configuration>
        <pages>${basedir}/src/test-conf/pages.xml</pages>
	  </configuration>
    </component>
    
  </components>

</plexus>
