<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by XML Authority. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xsd:schema xmlns:xsd = "http://www.w3.org/2001/XMLSchema"><!-- 
	 DTD for FormProc configuration file.

	 Author: Anthony Eden (me@anthonyeden.com)
-->
	<!--
	 Root element for the configuration.
-->
	<!-- Additional Notes:

	 ** ResourceLoader information **
	 
	 All configuration resources are loaded through ResourceLoaders.
	 
	 The loader attribute is optional.  If the loader class is not specified
	 then com.anthonyeden.lib.resource.FileResourceLoader is used.  If the 
	 loader is specified then it must be the fully-qualified class name of 
	 the resource loader implementation.  The resource loader implementation
	 must implement the com.anthonyeden.lib.resource.ResourceLoader interface.
	 
	 Either the path attribute or file attribute is required.  Use the path
	 attribute if the path is relative to whatever base is provided by the 
	 resource loader.  Use the file attribute if the path is relative to the
	 formproc configuration file.
	 
	 The monitor attribute is optional.  The monitor attribute is used to
	 determine if the resource loader should monitor the specified resource
	 for changes if possible.  If specified, it must be "true" or "false".
	 The default value is "false".  Note that some ResourceLoaders may not
	 be able to monitor resources for changes.
-->
	<xsd:element name = "formproc">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "message-provider" minOccurs = "0"/>
				<xsd:element ref = "include" minOccurs = "0" maxOccurs = "unbounded"/>
				<xsd:element ref = "validator-map" minOccurs = "0" maxOccurs = "unbounded"/>
				<xsd:element ref = "shared-validator" minOccurs = "0" maxOccurs = "unbounded"/>
				<xsd:element ref = "form" minOccurs = "0" maxOccurs = "unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "message-provider"><!--
     Specify a default message provider
-->
		<xsd:complexType/>
	</xsd:element>
	<xsd:element name = "include"><!--
	 Include the given configuration file inline.

	 For information on the loader, path, file and monitor attributes,
	 please see the ResourceLoader information at the bottom of this
	 document.
-->
		<xsd:complexType>
			<xsd:attribute name = "classname" use = "required" type = "xsd:string"/>
			<xsd:attribute name = "loader" default = "com.anthonyeden.lib.resource.FileResourceLoader" type = "xsd:string"/>
			<xsd:attribute name = "path" use = "optional" type = "xsd:string"/>
			<xsd:attribute name = "file" use = "optional" type = "xsd:string"/>
			<xsd:attribute name = "monitor" default = "false">
				<xsd:simpleType>
					<xsd:restriction base = "xsd:NMTOKEN">
						<xsd:enumeration value = "true"/>
						<xsd:enumeration value = "false"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "shared-validator"><!--
	 Define a shared validator which can be used throughout the application.
	 
	 The name attribute is required and must be unique throughout the 
	 application.
-->
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "validator"/>
			</xsd:sequence>
			<xsd:attribute name = "name" use = "required" type = "xsd:string"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "form"><!--
     Define a form which is accessible to the application.
     
     The name attribute is required and must be unique throughout the 
	 application.
	 
	 For information on the loader, path, file and monitor attributes,
	 please see the ResourceLoader information at the bottom of this
	 document.
-->
		<xsd:complexType>
			<xsd:attribute name = "name" use = "required" type = "xsd:string"/>
			<xsd:attribute name = "loader" default = "com.anthonyeden.lib.resource.FileResourceLoader" type = "xsd:string"/>
			<xsd:attribute name = "path" use = "optional" type = "xsd:string"/>
			<xsd:attribute name = "file" use = "optional" type = "xsd:string"/>
			<xsd:attribute name = "monitor" default = "false">
				<xsd:simpleType>
					<xsd:restriction base = "xsd:NMTOKEN">
						<xsd:enumeration value = "true"/>
						<xsd:enumeration value = "false"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "validator"><!--
	 A validator definition.  Validators must extend from the 
	 org.formproc.validation.Validator abstract base class. The validator's 
	 children can include error elements as well as any other configuration 
	 information which is passed to the validator when it is constructed.
	 
	 The type attribute is required and should match a validator type
	 defined in the formproc.xml configuration file in the validator-map
	 section.
-->
		<xsd:complexType mixed = "true">
			<xsd:choice minOccurs = "0" maxOccurs = "unbounded">
				<xsd:element ref = "error"/>
			</xsd:choice>
			<xsd:attribute name = "type" use = "required" type = "xsd:string"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "error"><!--
	 Defines an error message or means for providing error messages to the 
	 user in case the validator fails.
	 
	 Possible uses:
	 
	 1.) An inline message, with an optional lang attribute, which can be
	     displayed to the user.
	 2.) If the resource attribute is specified then the given resource bundle
	     class is used.  The element value should be the resource key for the
	     message in the bundle.
	 3.) If the classname attribute is specified then the given MessageProvider
	     class is used.
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "resource" use = "optional" type = "xsd:string"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>