package idhmd55e5481kz7e548qbrn;

/**
@version 2.0
@physicalPackage
@__modelType diagram 
*/
class diagram {
/**
@__ref <oiref:java#Class#org.codehaus.plexus.taskqueue.TaskExitEvaluator:oiref><oihard>
@__modelType reference 
*/
class reference {
}/**
@__ref <oiref:java#Class#org.codehaus.plexus.taskqueue.Task:oiref><oihard>
@__modelType reference 
*/
class reference2 {
}/**
@__ref <oiref:java#Class#org.codehaus.plexus.taskqueue.TaskViabilityEvaluator:oiref><oihard>
@__modelType reference 
*/
class reference3 {
}/**
@__ref <oiref:java#Class#org.codehaus.plexus.taskqueue.TaskEntryEvaluator:oiref><oihard>
@__modelType reference 
*/
class reference4 {
}/**
@__ref <oiref:java#Class#org.codehaus.plexus.taskqueue.TaskQueue:oiref><oihard>
@__modelType reference 
*/
class reference5 {
}/**
@__ref <oiref:java#Class#org.codehaus.plexus.taskqueue.DefaultTaskQueue:oiref><oihard>
@__modelType reference 
*/
class reference6 {
}/**
@__ref <oiref:design#Class#idhmd55e5481kz7e548qbrn.node:oiref><oihard>
@__modelType reference 
*/
class reference7 {
}/**
@__ref <oiref:design#Class#idhmd55e5481kz7e548qbrn.node8:oiref><oihard>
@__modelType reference 
*/
class reference9 {
}/**
@__ref <oiref:design#Class#idhmd55e5481kz7e548qbrn.node10:oiref><oihard>
@__modelType reference 
*/
class reference11 {
}}/**
@__tags
@shapeType ClassDiagram 
*/
class __tags {
}/**
@__options 
*/
class __options {
}/**
@__positions <oigroup:MemberLink#<oiref:java#Member#org.codehaus.plexus.taskqueue.DefaultTaskQueue#exitEvaluator:oiref>=585,316,585,370:oigroup>
<oigroup:<oiref:design#Class#idhmd55e5481kz7e548qbrn.node8:oiref>=352,499,184,341,0:oigroup>
<oigroup:<oiref:java#Member#org.codehaus.plexus.taskqueue.DefaultTaskQueue#take#(##)#:oiref>=260,280,334,15,1:oigroup>
<oigroup:<oiref:java#Class#org.codehaus.plexus.taskqueue.TaskQueue:oiref>=390,20,93,113,1:oigroup>
<oigroup:<oiref:java#Class#org.codehaus.plexus.taskqueue.TaskExitEvaluator:oiref>=560,370,123,96,1:oigroup>
<oigroup:MemberLink#<oiref:java#Member#org.codehaus.plexus.taskqueue.DefaultTaskQueue#entryEvaluator:oiref>=281,316,281,370:oigroup>
<oigroup:<oiref:java#Class#org.codehaus.plexus.taskqueue.TaskViabilityEvaluator:oiref>=350,370,151,96,1:oigroup>
<oigroup:<oiref:java#Member#org.codehaus.plexus.taskqueue.DefaultTaskQueue#put#(#org.codehaus.plexus.taskqueue.Task#)#:oiref>=270,280,334,15,1:oigroup>
<oigroup:<oiref:design#Class#idhmd55e5481kz7e548qbrn.node10:oiref>=580,500,203,224,0:oigroup>
<oigroup:<oiref:java#Class#org.codehaus.plexus.taskqueue.Task:oiref>=680,50,83,96,1:oigroup>
<oigroup:<oiref:java#Class#org.codehaus.plexus.taskqueue.DefaultTaskQueue:oiref>=270,180,340,136,0:oigroup>
<oigroup:MemberLink#<oiref:java#Member#org.codehaus.plexus.taskqueue.DefaultTaskQueue#viabilityEvaluator:oiref>=425,316,425,370:oigroup>
<oigroup:<oiref:java#Member#org.codehaus.plexus.taskqueue.DefaultTaskQueue#viabilityEvaluator:oiref>=250,230,334,15,1:oigroup>
<oigroup:<oiref:design#Class#idhmd55e5481kz7e548qbrn.node:oiref>=121,498,168,232,0:oigroup>
<oigroup:<oiref:java#Implements#org.codehaus.plexus.taskqueue.DefaultTaskQueue#org.codehaus.plexus.taskqueue.TaskQueue:oiref>=436,180,436,133:oigroup>
<oigroup:<oiref:java#Class#org.codehaus.plexus.taskqueue.TaskEntryEvaluator:oiref>=160,370,132,96,1:oigroup> 
*/
class __positions {
}/**
@shapeType Note
@__modelType node
@name Note1
@text Determine whether the task can enter the queue. We might reject it because it's from a certain person, or at a certain time or any other condition which would bar this task from entering the queue. Executed when a task is put on the queue. 
*/
class node {
}/**
@shapeType Note
@__modelType node
@name Note2
@text Once a task has entered the queue we want to examine this task in relation to any other tasks that are in the queue and see if it's viable. So if this task might be eliminated because of duplicates, or if the task is say only to be executed once per day or any other rule that might be enforced. Maybe this should be done on put as well but possibly a configurable process which checks for viability of all the tasks periodically. Can't think of a use case for this and it might be too complicated for most things. 
*/
class node8 {
}/**
@shapeType Note
@__modelType node
@name Note3
@text The last chance to examine the task to see if it is allowed to exit the queue. I honestly can't think of a case here but I'm sure it could be needed and it makes thing symmetrical which is a good thing in my opinion. Executed when an attempt is made to take a task from the queue. 
*/
class node10 {
}