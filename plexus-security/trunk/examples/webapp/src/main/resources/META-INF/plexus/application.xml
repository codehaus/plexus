<plexus>
  <components>

    <component>
      <role>org.codehaus.plexus.security.configuration.UserConfiguration</role>
      <implementation>org.codehaus.plexus.security.configuration.UserConfiguration</implementation>
      <configuration>
        <configs>
          <config>${user.home}/.m2/security-example.properties</config>
        </configs>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.security.system.SecuritySystem</role>
      <implementation>org.codehaus.plexus.security.system.DefaultSecuritySystem</implementation>
      <role-hint>default</role-hint>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.authentication.AuthenticationManager</role>
          <role-hint>default</role-hint>
          <field-name>authnManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.authorization.Authorizer</role>
          <role-hint>rbac</role-hint>
          <field-name>authorizer</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.user.UserManager</role>
          <role-hint>jdo</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.keys.KeyManager</role>
          <role-hint>jdo</role-hint>
          <field-name>keyManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.UserSecurityPolicy</role>
          <role-hint>default</role-hint>
          <field-name>policy</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.plexus.security.authorization.Authorizer</role>
      <role-hint>rbac</role-hint>
      <implementation>org.codehaus.plexus.security.authorization.rbac.RbacAuthorizer</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.rbac.RBACManager</role>
          <role-hint>jdo</role-hint>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.user.UserManager</role>
          <role-hint>jdo</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.authorization.rbac.evaluator.PermissionEvaluator</role>
          <role-hint>default</role-hint>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.plexus.security.policy.UserSecurityPolicy</role>
      <role-hint>default</role-hint>
      <implementation>org.codehaus.plexus.security.policy.DefaultUserSecurityPolicy</implementation>
      <description>User Security Policy.</description>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.security.configuration.UserConfiguration</role>
          <field-name>config</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.PasswordEncoder</role>
          <role-hint>sha256</role-hint>
          <field-name>passwordEncoder</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.UserValidationSettings</role>
          <field-name>userValidationSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.RememberMeSettings</role>
          <field-name>rememberMeSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.SingleSignOnSettings</role>
          <field-name>singleSignOnSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.security.policy.PasswordRule</role>
          <field-name>rules</field-name>
        </requirement>
      </requirements>
    </component>

    <!--
     | Logger manager
     -->
    <component>
      <role>org.codehaus.plexus.logging.LoggerManager</role>
      <implementation>org.codehaus.plexus.logging.log4j.Log4JLoggerManager</implementation>
      <lifecycle-handler>basic</lifecycle-handler>

      <configuration>
        <threshold>DEBUG</threshold>
        <default-appender>console</default-appender>
        <appenders>
          <appender>
            <id>console</id>
            <type>org.apache.log4j.ConsoleAppender</type>
            <conversion-pattern>%d [%t] %-5p %-30c - %m%n</conversion-pattern>
          </appender>
        </appenders>
        <levels>
          <level>
            <hierarchy>org.codehaus.plexus.PlexusContainer</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.codehaus.plexus.security</hierarchy>
            <level>DEBUG</level>
          </level>
          <level>
            <hierarchy>org.codehaus.plexus.velocity</hierarchy>
            <level>WARN</level>
          </level>
          <level>
            <hierarchy>com.opensymphony.xwork</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>com.opensymphony.webwork</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>freemarker</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>JPOX</hierarchy>
            <level>INFO</level>
          </level>
        </levels>
      </configuration>
    </component>
  </components>
  
  <!-- Override default configuration of components -->
  <lifecycle-handler-manager implementation="org.codehaus.plexus.lifecycle.DefaultLifecycleHandlerManager">
    <default-lifecycle-handler-id>webapp</default-lifecycle-handler-id>
    <lifecycle-handlers>
      <lifecycle-handler implementation="org.codehaus.plexus.personality.plexus.PlexusLifecycleHandler">
        <id>webapp</id>
        <name>Web Application Component Lifecycle Handler</name>
        <begin-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.LogEnablePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ContextualizePhase"/>
          <phase implementation="org.codehaus.plexus.xwork.ConfigurationPhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ServiceablePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.StartPhase"/>
        </begin-segment>
        <suspend-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.SuspendPhase"/>
        </suspend-segment>
        <resume-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ResumePhase"/>
        </resume-segment>
        <end-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.StopPhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.DisposePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.LogDisablePhase"/>
        </end-segment>
      </lifecycle-handler>
    </lifecycle-handlers>
  </lifecycle-handler-manager>
</plexus>
