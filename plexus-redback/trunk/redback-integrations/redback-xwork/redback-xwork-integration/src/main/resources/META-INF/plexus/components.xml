<!--
  ~ Copyright 2005-2006 The Codehaus.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<plexus>
  <components>

    <!-- ===============================================================
           Security System Definition.

           Uses RBAC Authorizer and Keys Authorizer
         =============================================================== -->
    <component>
      <role>org.codehaus.plexus.redback.system.SecuritySystem</role>
      <implementation>org.codehaus.plexus.redback.system.DefaultSecuritySystem</implementation>
      <role-hint>default</role-hint>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.redback.authentication.AuthenticationManager</role>
          <role-hint>default</role-hint>
          <field-name>authnManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.authorization.Authorizer</role>
          <role-hint>rbac</role-hint>
          <field-name>authorizer</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.user.UserManager</role>
          <role-hint>jdo</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.keys.KeyManager</role>
          <role-hint>jdo</role-hint>
          <field-name>keyManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.policy.UserSecurityPolicy</role>
          <role-hint>default</role-hint>
          <field-name>policy</field-name>
        </requirement>
      </requirements>
    </component>

    <!-- User Security Policy -->
    <component>
      <role>org.codehaus.plexus.redback.policy.UserSecurityPolicy</role>
      <role-hint>default</role-hint>
      <implementation>org.codehaus.plexus.redback.policy.DefaultUserSecurityPolicy</implementation>
      <description>User Security Policy.</description>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.redback.configuration.UserConfiguration</role>
          <field-name>config</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.policy.PasswordEncoder</role>
          <role-hint>sha256</role-hint>
          <field-name>passwordEncoder</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.policy.UserValidationSettings</role>
          <field-name>userValidationSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.policy.CookieSettings</role>
          <role-hint>rememberMe</role-hint>
          <field-name>rememberMeCookieSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.policy.CookieSettings</role>
          <role-hint>signon</role-hint>
          <field-name>signonCookieSettings</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.policy.PasswordRule</role>
          <field-name>rules</field-name>
        </requirement>
      </requirements>
    </component>

    <!-- RBAC Authorizer utilizing cached jdo rbac manager. -->
    <component>
      <role>org.codehaus.plexus.redback.authorization.Authorizer</role>
      <role-hint>rbac</role-hint>
      <implementation>org.codehaus.plexus.redback.rbac.RbacAuthorizer</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.redback.rbac.RBACManager</role>
          <role-hint>cached</role-hint>
          <field-name>manager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.user.UserManager</role>
          <role-hint>jdo</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.redback.rbac.evaluator.PermissionEvaluator</role>
          <role-hint>default</role-hint>
        </requirement>
      </requirements>
    </component>


    <component>
      <role>org.codehaus.plexus.rbac.profile.RoleProfile</role>
      <role-hint>user-administrator</role-hint>
      <implementation>org.codehaus.plexus.redback.xwork.role.profile.UserAdministratorRoleProfile</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.redback.rbac.RBACManager</role>
          <role-hint>cached</role-hint>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.PlexusContainer</role>
          <field-name>container</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.plexus.rbac.profile.RoleProfile</role>
      <role-hint>system-administrator</role-hint>
      <implementation>org.codehaus.plexus.redback.xwork.role.profile.SystemAdministratorRoleProfile</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.redback.rbac.RBACManager</role>
          <role-hint>cached</role-hint>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.PlexusContainer</role>
          <field-name>container</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.plexus.rbac.profile.RoleProfile</role>
      <role-hint>registered-user</role-hint>
      <implementation>org.codehaus.plexus.redback.xwork.role.profile.RegisteredUserRoleProfile</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.redback.rbac.RBACManager</role>
          <role-hint>cached</role-hint>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.PlexusContainer</role>
          <field-name>container</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.plexus.rbac.profile.RoleProfile</role>
      <role-hint>guest</role-hint>
      <implementation>org.codehaus.plexus.redback.xwork.role.profile.GuestRoleProfile</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.redback.rbac.RBACManager</role>
          <role-hint>cached</role-hint>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.PlexusContainer</role>
          <field-name>container</field-name>
        </requirement>
      </requirements>
    </component>

    <!-- ===============================================================
           JDO Definition.
         =============================================================== -->

    <component>
      <role>org.codehaus.plexus.jdo.JdoFactory</role>
      <role-hint>users</role-hint>
      <implementation>org.codehaus.plexus.jdo.DataSourceConfigurableJdoFactory</implementation>
      <configuration>

        <connectionFactoryName>java:comp/env/jdbc/users</connectionFactoryName>
        <shutdownConnectionFactoryName>java:comp/env/jdbc/shutdown</shutdownConnectionFactoryName>

        <!-- JPOX and JDO configuration -->
        <persistenceManagerFactoryClass>org.jpox.PersistenceManagerFactoryImpl</persistenceManagerFactoryClass>
        <otherProperties>
          <property>
            <name>org.jpox.autoCreateSchema</name>
            <value>true</value>
          </property>
          <property>
            <name>org.jpox.validateTables</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateColumns</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateConstraints</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <property>
            <name>org.jpox.poid.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <property>
            <name>org.jpox.rdbms.dateTimezone</name>
            <value>JDK_DEFAULT_TIMEZONE</value>
          </property>
<!--
          <property>
            <name>org.jpox.identifier.case</name>
            <value>PreserveCase</value>
          </property>
-->
        </otherProperties>
      </configuration>
    </component>


  </components>
</plexus>
