 -----
 Component Ranking
 -----
 Michal Maczka
 -----

h3. Component Ranking

When registering a component, a component descriptor may optionally contain a *ranking* number as one of the component descriptor's properties.

When Plexus composes components and wires them together component composer can use component's ranking for choosing which component implementation should be chosen.
If there are multiple qualifying components (with matching role, role hint), a component with the highest ranking number
can be used.

For example we have two implementations of Wagon Provider for HTTP Protocol.
"Lightweight" which is provided with m2 and "Normal" which can be downloaded and added to jar repository.
It will be nice if user will be able to only put a jar with "normal" implementation to lib folder and plexus will in such case when two components of the same role and role hints exists it will be nice if plexus give a precedes to "normal" one.


The open question is what should be the default ranking (if no ranking is provided).
What about using the value: *"2"*?.

This will allow to have components which lower ranking then the default one.


In the future it would be nice to have a possibility of changing rakings programmatically.

{code}
container.setComponentRanking( role, implementation, ranking );
{code}

This will be specially helpful in unit  tests where component implementation could be chooses without a need of writing an XML file.


h3 Role Hint.

Generally the usage of _role-hint_  is component descriptor not very clear. In the situation like this:


{code:xml}
 <component>
     <role>xx</role>
     <role-hint>ROLE-HINT_1</role-hint>
     <implementation>zz1</implementation>
 <component>

  <component>
     <role>xx</role>
     <role-hint>ROLE-HINT_2</role-hint>
     <implementation>zz1</implementation>
  <component>


  <component>
     <role>yy</role>
     <implementation>zz3</implementation>
     <requirements>
         <requirement>
              <role>xx</role>
         <requirment>
      <requirements>
  <component>

{code}

requirements of 3rd component will not be resolved.
IMO in such case plexus should provide any of available implementation.


h3. The solution

I would like change the implementation of DefaultComponentRepository class and to keep all component descriptors in

Map<String, List>

Keys in this Map will be components' roles

Values - list of components descriptor, which have given role.

It means that no matter if component descriptor has a role-hint or not it will be kept in the same list

The list will be ordered by _component ranking_.


When lookup operation without _"role-hint"_ is made - always first component descriptor in that list will be retured
If _"role-hint"_ is used then first  component with matching role-hint is returned.

In case of lookupList operation entire list is retured.

In case of lookupMap operation only components which have role-hint are used.


In the future component lookup operation can be extend and make a use component versions.
Proposed solution  is also compatible with that direction.