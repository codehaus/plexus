<plexus>

  <configurations-directory>${basedir}/src/test-input/configurations-directory</configurations-directory>

  <load-on-start>
    <service role="org.codehaus.plexus.LoadOnStartService"/>
    <service role="org.codehaus.plexus.LoadOnStartServiceWithRoleHint" id="role-hint"/>
    <service role="org.codehaus.plexus.BogusRole"/>
  </load-on-start>

  <system-properties>
    <property name="foo" value="bar"/>
  </system-properties>

  <logging>
    <implementation>org.codehaus.plexus.logging.console.ConsoleLoggerManager</implementation>
    <logger>
      <threshold>fatal</threshold>
    </logger>
  </logging>

  <component-repository>
    <implementation>org.codehaus.plexus.component.repository.DefaultComponentRepository</implementation>
  </component-repository>

  <lifecycle-handlers>
    <lifecycle-handler implementation="org.codehaus.plexus.SimpleLifecycleHandler">
      <id>arbitrary</id>
      <name>Arbitrary Lifecycle Handler</name>
      <begin-segment>
        <phase implementation="org.codehaus.plexus.lifecycle.phase.EenyPhase"/>
        <phase implementation="org.codehaus.plexus.lifecycle.phase.MeenyPhase"/>
        <phase implementation="org.codehaus.plexus.lifecycle.phase.MinyPhase"/>
        <phase implementation="org.codehaus.plexus.lifecycle.phase.MoPhase"/>
      </begin-segment>
      <suspend-segment>
      </suspend-segment>
      <resume-segment>
      </resume-segment>
      <end-segment>
      </end-segment>
    </lifecycle-handler>
  </lifecycle-handlers>

  <components>

    <component>
      <role>org.codehaus.plexus.ConfigurableComponent</role>
      <implementation>org.codehaus.plexus.DefaultConfigurableComponent</implementation>
      <configuration>
        <host>localhost</host>
        <port>10000</port>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.ServiceC</role>
      <role-hint>first-instance</role-hint>
      <implementation>org.codehaus.plexus.DefaultServiceC</implementation>
    </component>

    <component>
      <role>org.codehaus.plexus.ServiceC</role>
      <role-hint>second-instance</role-hint>
      <implementation>org.codehaus.plexus.DefaultServiceC</implementation>
    </component>

    <component>
      <role>org.codehaus.plexus.ServiceD</role>
      <implementation>org.codehaus.plexus.DefaultServiceD</implementation>
      <instantiation-strategy>poolable</instantiation-strategy>
    </component>

    <component>
      <role>org.codehaus.plexus.ServiceH</role>
      <implementation>org.codehaus.plexus.DefaultServiceH</implementation>
      <lifecycle-handler>arbitrary</lifecycle-handler>
    </component>

    <component>
      <role>org.codehaus.plexus.LoadOnStartService</role>
      <implementation>org.codehaus.plexus.DefaultLoadOnStartService</implementation>
      <configuration/>
    </component>

    <component>
      <role>org.codehaus.plexus.LoadOnStartServiceWithRoleHint</role>
      <role-hint>role-hint</role-hint>
      <implementation>org.codehaus.plexus.DefaultLoadOnStartServiceWithRoleHint</implementation>
    </component>

  </components>

</plexus>
