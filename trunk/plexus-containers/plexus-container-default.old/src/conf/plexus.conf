<plexus>

  <logging>
    <implementation>org.codehaus.plexus.logging.console.ConsoleLoggerManager</implementation>
  </logging>

  <component-repository>
    <implementation>org.codehaus.plexus.component.repository.DefaultComponentRepository</implementation>
  </component-repository>

  <resource-manager>
    <implementation>org.codehaus.plexus.classloader.DefaultResourceManager</implementation>
  </resource-manager>

  <lifecycle-handler-manager implementation='org.codehaus.plexus.lifecycle.DefaultLifecycleHandlerManager'>
    <default-lifecycle-handler-id>avalon</default-lifecycle-handler-id>
    <lifecycle-handlers>
      <lifecycle-handler implementation='org.codehaus.plexus.personality.plexus.PlexusLifecycleHandler'>
        <id>avalon</id>
        <name>Plexus Lifecycle Handler</name>
        <begin-segment>
          <phase implementation='org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase'/>
          <phase implementation='org.codehaus.plexus.personality.plexus.lifecycle.phase.ConfigurePhase'/>
          <phase implementation='org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializePhase'/>
          <phase implementation='org.codehaus.plexus.personality.plexus.lifecycle.phase.StartPhase'/>
        </begin-segment>
        <suspend-segment>
          <phase implementation='org.codehaus.plexus.personality.plexus.lifecycle.phase.SuspendPhase'/>
        </suspend-segment>
        <resume-segment>
          <phase implementation='org.codehaus.plexus.personality.plexus.lifecycle.phase.ResumePhase'/>
        </resume-segment>
        <end-segment>
          <phase implementation='org.codehaus.plexus.personality.plexus.lifecycle.phase.StopPhase'/>
          <phase implementation='org.codehaus.plexus.personality.plexus.lifecycle.phase.DisposePhase'/>
        </end-segment>
      </lifecycle-handler>
    </lifecycle-handlers>
  </lifecycle-handler-manager>

  <component-manager-manager>
    <default-component-manager-id>singleton</default-component-manager-id>
    <component-managers>
      <component-manager implementation="org.codehaus.plexus.component.manager.PerLookupComponentManager">
        <id>per-lookup</id>
      </component-manager>
      <component-manager implementation="org.codehaus.plexus.component.manager.PoolableComponentManager">
        <id>poolable</id>
        <initial-capacity>5</initial-capacity>
        <sweep-interval>5</sweep-interval>
        <max-capacity>30</max-capacity>
        <min-capacity>5</min-capacity>
        <trigger-size>20</trigger-size>
      </component-manager>
      <component-manager implementation="org.codehaus.plexus.component.manager.ClassicSingletonComponentManager">
        <id>singleton</id>
      </component-manager>
      <component-manager implementation="org.codehaus.plexus.component.manager.KeepAliveSingletonComponentManager">
        <id>singleton-keep-alive</id>
      </component-manager>
    </component-managers>
  </component-manager-manager>

  <component-factory-manager>
    <default-id>java</default-id>
    <component-factories>
      <component-factory>
        <id>java</id>
        <role>org.codehaus.plexus.component.factory.ComponentFactory</role>
        <implementation>org.codehaus.plexus.component.factory.JavaComponentFactory</implementation>
      </component-factory>
    </component-factories>
  </component-factory-manager>

  <component-profile-manager>
    <default-id>standard</default-id>
    <component-profiles>
      <component-profile>
        <id>standard</id>
        <lifecycle-handler>avalon</lifecycle-handler>
        <component-manager>singleton</component-manager>
        <factory>java</factory>
      </component-profile>
    </component-profiles>
  </component-profile-manager>

</plexus>
