<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.plexus.xsiter</groupId>
  <artifactId>xsiter-web</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>XSiter :: Web Application</name>
  <packaging>war</packaging>
  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>sitemesh</artifactId>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-xwork-integration</artifactId>
      <version>1.0-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-log4j-logging</artifactId>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>webwork</artifactId>
      <version>2.2.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <version>1.0-alpha-10</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>${maven.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-project-info-reports-plugin</artifactId>
      <version>2.1-SNAPSHOT</version>
      <exclusions>
        <exclusion>
          <groupId>plexus</groupId>
          <artifactId>plexus-utils</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Plexus Security Dependencies -->
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>plexus-security-system</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>plexus-security-ui-web</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>plexus-security-ui-web-integration</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>plexus-security-ui-web-taglib</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>plexus-security-ui-web-rbac</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>
        plexus-security-authentication-provider-user-manager
      </artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>plexus-security-user-management-api</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>
        plexus-security-user-management-provider-jdo
      </artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>
        plexus-security-authorization-rbac-store-jdo
      </artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>plexus-security-authorization-api</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>
        plexus-security-authorization-rbac-authorizer
      </artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-jdo2</artifactId>
      <version>1.0-alpha-7</version>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xmlParserAPIs</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus.security</groupId>
      <artifactId>plexus-security-keys-jdo</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-mail-sender-javamail</artifactId>
      <version>1.0-alpha-3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.1.3.1</version>
    </dependency>
    <dependency>
      <groupId>jpox</groupId>
      <artifactId>jpox</artifactId>
      <version>1.1.1</version>
      <exclusions>
        <!-- targeting JDK 1.4 we don't need this -->
        <exclusion>
          <groupId>javax.sql</groupId>
          <artifactId>jdbc-stdext</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.1.1-20060724.192148-1</version>
        <!-- This configuration is added to cleanup from war:inplace -->
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/</directory>
              <includes>
                <include>derby.log</include>
              </includes>
            </fileset>
            <fileset>
              <directory>${basedir}/src/main/webapp</directory>
              <includes>
                <!-- TODO: META-INF shouldn't be required, seems to be an issue with the current war plugin -->
                <include>META-INF</include>
                <include>WEB-INF/classes</include><!-- Classes and Resources from other wars -->
                <include>WEB-INF/lib</include><!-- Dependencies from other wars -->
                <include>WEB-INF/database</include><!-- Database location configured in application.xml -->
                <include>WEB-INF/logs</include><!-- Log file location specified in application.xml -->
                <include>pss</include><!-- plexus-security css and javascript -->
                <include>WEB-INF/jsp/pss</include><!-- plexus-security jsps -->
                <include>WEB-INF/template/pss</include><!-- plexus-security xwork templates -->
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.0.1</version>
        <configuration>
          <!-- Some versions of maven-war-plugin (snapshots) have this incorrectly defaulted to true.
            Specifically setting this to false to avoid accidental jar file creation. -->
          <archiveClasses>false</archiveClasses>
          <dependentWarExcludes>
            META-INF/**,WEB-INF/web.xml,WEB-INF/classes/xwork.xml
          </dependentWarExcludes>
        </configuration>
        <!-- TODO: would be good to make the jetty plugin aware of these and remove the below -->
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <!-- Needed to get the plexus-security war overlay to do its thing before jetty:run -->
              <goal>inplace</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <contextPath>/</contextPath>
          <!-- jettyEnvXml>src/jetty-env.xml</jettyEnvXml -->
          <connectors>
            <connector
              implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>9000</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-maven-plugin</artifactId>
        <configuration>
          <roleDefaults>
            <roleDefault>
              <role>com.opensymphony.xwork.Action</role>
              <instantiation-strategy>
                per-lookup
              </instantiation-strategy>
            </roleDefault>
          </roleDefaults>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <!-- TODO! add unit tests -->
        <configuration>
          <instrumentation>
            <excludes>
              <exclude>**/**</exclude>
            </excludes>
          </instrumentation>
        </configuration>
      </plugin>
      <!-- TODO: Test invocation of this plugin -->
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-maven-plugin</artifactId>
        <configuration>
          <roleDefaults>
            <roleDefault>
              <role>com.opensymphony.xwork.Action</role>
              <instantiation-strategy>
                per-lookup
              </instantiation-strategy>
            </roleDefault>
          </roleDefaults>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <contextPath>/</contextPath>
          <connectors>
            <connector
              implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>9090</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
        </configuration>
      </plugin>
      <!-- Cargo Maven2 Mojo config -->
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <configuration>
          <!-- wait>false</wait -->
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>
                http://mirrors.ccs.neu.edu/Apache/dist/tomcat/tomcat-5/v5.5.16/bin/apache-tomcat-5.5.16.zip
              </url>
              <installDir>${installDir}</installDir>
            </zipUrlInstaller>
            <output>${basedir}/tomcat5x.log</output>
            <log>${basedir}/cargo.log</log>
          </container>
          <configuration>
            <home>
              ${basedir}/../../deploy/webapp/${artifactId}/tomcat5x/
            </home>
            <properties>
              <!-- This is the SHUTDOWN port for Tomcat -->
              <!-- Tomcat admin and servlet ports -->
              <cargo.rmi.port>9191</cargo.rmi.port>
              <cargo.servlet.port>9192</cargo.servlet.port>
            </properties>
            <deployables>
              <deployable>
                <properties>
                  <context>ROOT</context>
                </properties>
              </deployable>
            </deployables>
          </configuration>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <!-- Snapshots repo -->
  <repositories>
    <repository>
      <id>codehaus.snapshots</id>
      <url>http://snapshots.repository.codehaus.org</url>
    </repository>
  </repositories>
  <!-- Properties used by Deployer as well -->
  <properties>
    <maven.version>2.0.4</maven.version>
    <installDir>/opt/tools/cargo</installDir>
    <vhosts.configuration>
      <![CDATA[<vhosts>
        <vhost>
          <id>staging</id>
          <vhostTemplate>src/conf/vhosts.vm</vhostTemplate>
          <vhostDirectory>deploy/apache</vhostDirectory>
          <vhostIP>127.0.0.1</vhostIP>
          <vhostName>xsiter.localhost</vhostName>
          <vhostLogDirectory>deploy/apache/logs</vhostLogDirectory>
          <vhostConnectorProtocol>http</vhostConnectorProtocol>
          <vhostConnectorPort>9192</vhostConnectorPort>          
        </vhost>
      </vhosts>]]>
    </vhosts.configuration>
  </properties>
</project>
