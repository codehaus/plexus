<plexus> 

  <load-on-start>
    <service role="org.codehaus.plexus.httpserver.HttpServer"/>
  </load-on-start>

  <component-repository implementation="org.codehaus.plexus.personality.avalon.AvalonComponentRepository">
    <composition-resolver implementation="org.codehaus.plexus.component.composition.DefaultCompositionResolver"/>
  </component-repository>

  <!--
   |
   | Lifecycle handler Manager.
   |
   -->
  <lifecycle-handler-manager implementation='org.codehaus.plexus.lifecycle.DefaultLifecycleHandlerManager'>
    <default-lifecycle-handler-id>plexus</default-lifecycle-handler-id>
    <lifecycle-handlers>
      <lifecycle-handler implementation='org.codehaus.plexus.personality.avalon.AvalonLifecycleHandler'>
        <id>avalon</id>
        <name>Avalon Lifecycle Handler</name>
        <begin-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.LogEnablePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ContextualizePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ServicePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ComposePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ConfigurePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.InitializePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.StartPhase'/>
        </begin-segment>
        <suspend-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.SuspendPhase'/>
        </suspend-segment>
        <resume-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ResumePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.RecontextualizePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ReconfigurePhase'/>
        </resume-segment>
        <end-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.StopPhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.DisposePhase'/>
        </end-segment>
      </lifecycle-handler>
    </lifecycle-handlers>
  </lifecycle-handler-manager>
    
  <components> 
    <component> 
      <role>org.codehaus.plexus.httpserver.HttpServer</role> 
      <implementation>org.codehaus.plexus.httpserver.DefaultHttpServer</implementation> 
      <lifecycle-handler>avalon</lifecycle-handler>
      <configuration> 
      	<http.port>9999</http.port>
      	<http.behaviour.role>http.behaviour.mock</http.behaviour.role>
      </configuration>
    </component>
    <component> 
      <role>http.behaviour.mock</role> 
      <implementation>org.codehaus.plexus.httpserver.MockHttpBehaviour</implementation> 
      <lifecycle-handler>avalon</lifecycle-handler>
      <configuration/> 
    </component>
    <component>
      <role>org.codehaus.plexus.logging.LoggerManager</role>
      <implementation>org.codehaus.plexus.logging.console.ConsoleLoggerManager</implementation>
      <lifecycle-handler>basic</lifecycle-handler>
      <configuration>
        <threshold>fatal</threshold>
      </configuration>
    </component>
  </components> 
  
</plexus>
