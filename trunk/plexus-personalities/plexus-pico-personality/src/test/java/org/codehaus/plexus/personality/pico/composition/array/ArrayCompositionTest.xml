<plexus>

    <!--lifecycle-handlers>
      <lifecycle-handler implementation="org.codehaus.plexus.personality.plexus.PlexusLifecycleHandler">
        <id>plexus</id>
        <name>Plexus Lifecycle Handler</name>
        <begin-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.LogEnablePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ContextualizePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ConfigurePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.StartPhase"/>
        </begin-segment>
        <suspend-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.SuspendPhase"/>
        </suspend-segment>
        <resume-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.ResumePhase"/>
        </resume-segment>
        <end-segment>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.StopPhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.DisposePhase"/>
          <phase implementation="org.codehaus.plexus.personality.plexus.lifecycle.phase.LogDisablePhase"/>
        </end-segment>
      </lifecycle-handler>      
    </lifecycle-handlers-->

    <component-factory-manager implementation="org.codehaus.plexus.component.factory.DefaultComponentFactoryManager">
        <component-factories>
            <component-factory implementation="org.codehaus.plexus.personality.pico.factory.PicoComponentFactory">
                <id>pico</id>
            </component-factory>
        </component-factories>
    </component-factory-manager>

    <components>
        <component>
            <role>org.codehaus.plexus.personality.pico.composition.array.Foo</role>
            <role-hint>role-1</role-hint>
            <implementation>org.codehaus.plexus.personality.pico.composition.array.FooImpl1</implementation>
            <component-factory>pico</component-factory>
            <component-composer>noop</component-composer>
        </component>

        <component>
            <role>org.codehaus.plexus.personality.pico.composition.array.Foo</role>
            <role-hint>role-2</role-hint>
            <implementation>org.codehaus.plexus.personality.pico.composition.array.FooImpl2</implementation>
            <component-factory>pico</component-factory>
            <component-composer>noop</component-composer>
        </component>


        <!-- This seems to be strange but that matches pico 2 min tutorial -->
        <component>
            <role>org.codehaus.plexus.personality.pico.composition.array.Baa</role>
            <implementation>org.codehaus.plexus.personality.pico.composition.array.DefaultBaa</implementation>
            <component-factory>pico</component-factory>
            <component-composer>noop</component-composer>
        </component>


        <component>
            <role>org.codehaus.plexus.personality.pico.composition.basic.Kisser</role>
            <implementation>org.codehaus.plexus.personality.pico.composition.basic.Girl</implementation>
            <component-profile>pico</component-profile>

        </component>


    </components>
</plexus>